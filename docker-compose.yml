services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: jade_postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-jade_smartbank}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - jade_network
    restart: unless-stopped

  # FastAPI Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: jade_app
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-postgres}@postgres:5432/${POSTGRES_DB:-jade_smartbank}
      SECRET_KEY: ${SECRET_KEY:-change-this-in-production}
      DEBUG: ${DEBUG:-false}
    ports:
      - "8000:8000"
    volumes:
      - ./app:/app/app
    networks:
      - jade_network
    restart: unless-stopped

  # Redis (Optional - for caching and rate limiting)
  redis:
    image: redis:7-alpine
    container_name: jade_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - jade_network
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:

networks:
  jade_network:
    driver: bridge